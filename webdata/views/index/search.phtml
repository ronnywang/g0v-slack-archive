<?php

$this->title = "# Search [" . $this->q . "]";
$this->messages = Message::search('data->>\'text\' LIKE ' . Message::getDb()->quoteWithColumn('data', '%' . $this->q . '%'))->limit(100);
$channel_ids = array();
$messages = array();
foreach ($this->messages as $message) {
    $channel_ids[$message->channel_id] = $message->channel_id;
    $messages[] = $message;
}
usort($messages, function($a, $b) { return $b->ts - $a->ts; });
$channels = array();
if ($channel_ids) {
    foreach (Channel::search(1)->searchIn('id', array_keys($channel_ids)) as $channel) {
        $data = json_decode($channel->data);
        if ($data->is_private) {
            if (!$this->user->id) {
                continue;
            }
            if (!ChannelUser::search(array('channel_id' => $channel->id, 'user_id' => $this->user->id))->count()) {
                continue;
            }
        }
        $channels[$channel->id] = $channel;
    }
}

?>
<?= $this->partial('common/header.phtml', $this) ?>
<style>
.message .avatar {
    float: left;
    padding-right: 5px;
}

.message .content {
    overflow: hidden;
    padding-bottom: 10px;
}

.message {
    clear: both;
}
</style>
<?php foreach ($messages as $message) { ?>
<?php if (!array_key_exists($message->channel_id, $channels)) { continue; } ?>
<h3><a href="/index/channel/<?= $message->channel_id ?>/<?= date('Y-m', $message->ts) ?>#ts-<?= $message->ts ?>">#<?= $this->escape($channels[$message->channel_id]->name) ?>. <?= date('Y-m-d H:i:s', $message->ts) ?></a></h3></h3>
<?= $this->partial('/index/message.phtml', array('message' => $message)) ?>
<?php } ?>
<div style="clear:both"></div>
<?= $this->partial('common/footer.phtml', $this) ?>

